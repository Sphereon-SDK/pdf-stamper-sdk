{
  "basePath": "/pdf/stamp/0.2",
  "paths": {
    "/jobs/{jobid}/streams/content": {"post": {
      "summary": "Upload a base64 encoded file",
      "security": [{"oauth2schema": ["global"]}],
      "deprecated": false,
      "produces": ["application/json;charset=UTF-8"],
      "description": "Upload an image, office or pdf for conversion to PDF, embedded in a json as a base64 encoded string",
      "operationId": "addContent",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/PdfStamperJobContainer"},
          "description": "File content uploaded. The JSON Job response will be returned in the body."
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Job could not be stored/processed"
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id."
        }
      },
      "parameters": [
        {
          "schema": {"$ref": "#/definitions/FileContentRequest"},
          "in": "body",
          "name": "fileContent",
          "description": "File content",
          "required": true
        },
        {
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }
      ],
      "tags": ["Jobs"],
      "consumes": ["application/json;charset=UTF-8"]
    }},
    "/config/{configId}/streams/multipart": {"post": {
      "summary": "Upload resource",
      "security": [{"oauth2schema": ["global"]}],
      "deprecated": false,
      "produces": ["application/json;charset=UTF-8"],
      "description": "Upload a resource needed by a configuration.",
      "operationId": "uploadResource",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/StreamLocation"},
        "description": "A StreamLocation object"
      }},
      "parameters": [
        {
          "in": "path",
          "name": "configId",
          "description": "configId",
          "type": "string",
          "required": true
        },
        {
          "in": "formData",
          "name": "stream",
          "description": "The resource data",
          "type": "file",
          "required": true
        }
      ],
      "tags": ["Config"],
      "consumes": ["multipart/form-data"]
    }},
    "/config": {"post": {
      "summary": "Create PDF stamper configuration",
      "security": [{"oauth2schema": ["global"]}],
      "deprecated": false,
      "produces": ["application/json;charset=UTF-8"],
      "description": "Create / initialize a new PDF stamper configuration.",
      "operationId": "createConfiguration",
      "responses": {"201": {
        "schema": {"$ref": "#/definitions/PdfStamperConfigContainer"},
        "description": "PDF Stamp configuration has been successfully created."
      }},
      "parameters": [{
        "schema": {"$ref": "#/definitions/PdfStamperConfig"},
        "in": "body",
        "name": "pdfStamperConfiguration",
        "description": "The PDF stamper configuration",
        "required": true
      }],
      "tags": ["Config"],
      "consumes": ["application/json;charset=UTF-8"]
    }},
    "/jobs/{jobid}": {
      "get": {
        "summary": "Job definition and state",
        "security": [{"oauth2schema": ["global"]}],
        "deprecated": false,
        "produces": ["application/json;charset=UTF-8"],
        "description": "Get the PDF stamper job definition and current state. Please note that you can differentiate based on http response status.",
        "operationId": "getJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/PdfStamperJobContainer"},
            "description": "PDF job returned and Job is done or in error"
          },
          "202": {
            "schema": {"$ref": "#/definitions/PdfStamperJobContainer"},
            "description": "PDF job returned and Job is still processing"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }],
        "tags": ["Jobs"]
      },
      "delete": {
        "summary": "Delete a job manually",
        "security": [{"oauth2schema": ["global"]}],
        "deprecated": false,
        "produces": ["application/json;charset=UTF-8"],
        "description": "Delete the PDF stamper job and all related files depending on the lifecycle.",
        "operationId": "deleteJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/PdfStamperJobContainer"},
            "description": "PDF job returned and Job is done or in error"
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Could not delete all parts"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }],
        "tags": ["Jobs"]
      },
      "put": {
        "summary": "Submit PDF stamper job for processing",
        "security": [{"oauth2schema": ["global"]}],
        "deprecated": false,
        "produces": ["application/json;charset=UTF-8"],
        "description": "Start PDF stamper job for processing. Stamp one or more configurations on the previously uploaded PDFs. The settings supplied with the job in the request body are used. You can only submit the job after a new Job is created with status INPUTS_UPLOADED or resubmit an existing Job with status ERROR.",
        "operationId": "submitJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/PdfStamperJobContainer"},
            "description": "Conversion job submitted"
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Resubmitted job not allowed because the job is currently processing or already processed and had status DONE"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id"
          }
        },
        "parameters": [
          {
            "schema": {"$ref": "#/definitions/PdfStamperJobSettings"},
            "in": "body",
            "name": "job",
            "description": "jobSettings",
            "required": true
          },
          {
            "in": "path",
            "name": "jobid",
            "description": "jobid",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Jobs"],
        "consumes": ["application/json;charset=UTF-8"]
      }
    },
    "/config/{configId}/streams": {"delete": {
      "summary": "Delete resources",
      "security": [{"oauth2schema": ["global"]}],
      "deprecated": false,
      "produces": ["*/*"],
      "description": "Delete resources referenced by a configuration.",
      "operationId": "deleteResources",
      "responses": {"200": {"description": "The resources were deleted successfully"}},
      "parameters": [
        {
          "in": "path",
          "name": "configId",
          "description": "The PDF stamper configuration id",
          "type": "string",
          "required": true
        },
        {
          "schema": {
            "type": "array",
            "items": {"$ref": "#/definitions/StreamLocation"}
          },
          "in": "body",
          "name": "streamLocations",
          "description": "The resource locations in storage",
          "required": true
        }
      ],
      "tags": ["Config"]
    }},
    "/config/{configId}": {
      "get": {
        "summary": "Get PDF stamper configuration",
        "security": [{"oauth2schema": ["global"]}],
        "deprecated": false,
        "produces": ["application/json;charset=UTF-8"],
        "description": "Retrieve a PDF stamper configuration.",
        "operationId": "getConfiguration",
        "responses": {"200": {
          "schema": {"$ref": "#/definitions/PdfStamperConfigContainer"},
          "description": "A PdfStamperConfigContainer object"
        }},
        "parameters": [{
          "in": "path",
          "name": "configId",
          "description": "The PDF stamper configuration id",
          "type": "string",
          "required": true
        }],
        "tags": ["Config"]
      },
      "delete": {
        "summary": "Delete PDF stamper configuration",
        "security": [{"oauth2schema": ["global"]}],
        "deprecated": false,
        "produces": ["application/json;charset=UTF-8"],
        "description": "Delete a PDF stamper configuration.",
        "operationId": "deleteConfiguration",
        "responses": {"200": {
          "schema": {"$ref": "#/definitions/PdfStamperConfigContainer"},
          "description": "A PdfStamperConfigContainer object"
        }},
        "parameters": [{
          "in": "path",
          "name": "configId",
          "description": "The PDF stamper configuration id",
          "type": "string",
          "required": true
        }],
        "tags": ["Config"]
      },
      "put": {
        "summary": "Update PDF stamper configuration",
        "security": [{"oauth2schema": ["global"]}],
        "deprecated": false,
        "produces": ["application/json;charset=UTF-8"],
        "description": "Update an existing PDF stamper configuration.",
        "operationId": "updateConfiguration",
        "responses": {"200": {
          "schema": {"$ref": "#/definitions/PdfStamperConfigContainer"},
          "description": "A PdfStamperConfigContainer object"
        }},
        "parameters": [
          {
            "in": "path",
            "name": "configId",
            "description": "The PDF stamper configuration id",
            "type": "string",
            "required": true
          },
          {
            "schema": {"$ref": "#/definitions/PdfStamperConfig"},
            "in": "body",
            "name": "pdfStamperConfiguration",
            "description": "The PDF stamper configuration",
            "required": true
          }
        ],
        "tags": ["Config"],
        "consumes": ["application/json;charset=UTF-8"]
      }
    },
    "/jobs/{jobid}/streams/multipart": {"post": {
      "summary": "Upload a file",
      "security": [{"oauth2schema": ["global"]}],
      "deprecated": false,
      "produces": ["application/json;charset=UTF-8"],
      "description": "Upload a pdf to stamp one or more configurations. Please note that you can upload multiple files.",
      "operationId": "addInputFile",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/PdfStamperJobContainer"},
          "description": "File uploaded. The JSON Job response will be returned in the body."
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Job could not be stored/processed"
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        },
        {
          "in": "formData",
          "name": "stream",
          "description": "The (additional) binary image or PDF (file/inputstream) to convert to PDF",
          "type": "file",
          "required": true
        }
      ],
      "tags": ["Jobs"],
      "consumes": ["multipart/form-data"]
    }},
    "/jobs": {
      "post": {
        "summary": "Create PDF stamper job",
        "security": [{"oauth2schema": ["global"]}],
        "deprecated": false,
        "produces": ["application/json;charset=UTF-8"],
        "description": "Create a job using the given settings.",
        "operationId": "createJob",
        "responses": {"201": {
          "schema": {"$ref": "#/definitions/PdfStamperJobContainer"},
          "description": "PDF stamper job created but not started yet"
        }},
        "parameters": [{
          "schema": {"$ref": "#/definitions/PdfStamperJobSettings"},
          "in": "body",
          "name": "jobSettings",
          "description": "jobSettings",
          "required": true
        }],
        "tags": ["Jobs"],
        "consumes": ["application/json;charset=UTF-8"]
      },
      "get": {
        "summary": "Get all jobs",
        "security": [{"oauth2schema": ["global"]}],
        "deprecated": false,
        "produces": ["application/json;charset=UTF-8"],
        "description": "Get all PDF stamper job definitions and their current state.",
        "operationId": "getJobs",
        "responses": {"200": {
          "schema": {
            "type": "array",
            "items": {"$ref": "#/definitions/PdfStamperJobContainer"}
          },
          "description": "All PDF jobs that have not been deleted"
        }},
        "parameters": [{
          "in": "query",
          "allowEmptyValue": false,
          "name": "jobStatuses",
          "description": "A list of jobStatuses to filter on.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CREATED",
              "INPUTS_UPLOADED",
              "PROCESSING",
              "DONE",
              "ERROR",
              "DELETED"
            ]
          },
          "collectionFormat": "multi",
          "required": false,
          "enum": [
            "CREATED",
            "INPUTS_UPLOADED",
            "PROCESSING",
            "DONE",
            "ERROR",
            "DELETED"
          ]
        }],
        "tags": ["Jobs"]
      }
    },
    "/jobs/{jobid}/streams/location": {"post": {
      "summary": "Add Input Stream Location(s)",
      "security": [{"oauth2schema": ["global"]}],
      "deprecated": false,
      "produces": ["application/json;charset=UTF-8"],
      "description": "Add image, office or pdf input stream location(s) from the storage API for conversion to PDF. Please note that you can upload multiple files. Conversion will not be started yet.",
      "operationId": "addInputStreamLocations",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/PdfStamperJobContainer"},
          "description": "Stream location(s) added. The JSON Job response will be returned in the body."
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Job could not be stored/processed"
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        },
        {
          "schema": {
            "type": "array",
            "items": {"$ref": "#/definitions/StreamLocation"}
          },
          "in": "body",
          "name": "streamLocations",
          "description": "The (additional) binary image or PDF (file/inputstream) to convert to PDF",
          "required": true
        }
      ],
      "tags": ["Jobs"],
      "consumes": ["application/json;charset=UTF-8"]
    }},
    "/jobs/{jobid}/streams/result": {"get": {
      "summary": "Get the current result stream",
      "security": [{"oauth2schema": ["global"]}],
      "deprecated": false,
      "produces": ["application/octet-stream"],
      "description": "Get the PDF stamper as binary stream/file.\r\nOur API generation does not allow changing the media type based on the Accepted header unfortunately.\r\nThis means we use a separate path postfix with the value '/stream'.\r\nThis API only returns the PDF when the response status is DONE.",
      "operationId": "getStream",
      "responses": {
        "200": {
          "schema": {
            "format": "byte",
            "type": "string"
          },
          "description": "PDF successfully created and returned"
        },
        "202": {
          "schema": {
            "format": "int32",
            "maximum": 127,
            "type": "integer",
            "minimum": -128
          },
          "description": "PDF not yet created. Job is still executing. Will return the JSON job instead of the PDF"
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "PDF could not be created."
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id. No response body is supplied"
        }
      },
      "parameters": [{
        "in": "path",
        "name": "jobid",
        "description": "jobid",
        "type": "string",
        "required": true
      }],
      "tags": ["Jobs"]
    }}
  },
  "host": "gw.api.cloud.sphereon.com",
  "schemes": ["https"],
  "securityDefinitions": {"oauth2schema": {
    "tokenUrl": "https://null/token",
    "scopes": {"global": "accessEverything"},
    "type": "oauth2",
    "flow": "application"
  }},
  "definitions": {
    "RGBValue": {
      "description": "A RGB color value",
      "type": "object",
      "title": "RGBValue",
      "required": [
        "b",
        "g",
        "r"
      ],
      "properties": {
        "b": {
          "format": "int32",
          "type": "integer"
        },
        "r": {
          "format": "int32",
          "type": "integer"
        },
        "g": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Connector": {
      "description": "Connection between components containing anchor points and offset of the component",
      "type": "object",
      "title": "Connector",
      "required": [
        "horizontalAnchorPoint",
        "verticalAnchorPoint"
      ],
      "properties": {
        "components": {
          "type": "array",
          "items": {"$ref": "#/definitions/StampComponent"}
        },
        "offset": {
          "description": "The offset op the components relative to the parent component",
          "$ref": "#/definitions/Point"
        },
        "horizontalAnchorPoint": {
          "description": "The horizontal anchor point to which the components are connected",
          "type": "string",
          "enum": [
            "LEFT",
            "CENTER",
            "RIGHT"
          ]
        },
        "verticalAnchorPoint": {
          "description": "The vertical anchor point to which the components are connected",
          "type": "string",
          "enum": [
            "TOP",
            "MIDDLE",
            "BOTTOM"
          ]
        }
      }
    },
    "StampComponent": {
      "type": "object",
      "title": "StampComponent",
      "required": ["type"],
      "properties": {
        "border": {
          "xml": {
            "name": "border",
            "attribute": false,
            "wrapped": false
          },
          "description": "The border of the component",
          "$ref": "#/definitions/Border"
        },
        "connectors": {
          "xml": {
            "name": "connectors",
            "attribute": false,
            "wrapped": false
          },
          "description": "Connectors containing components that can be positioned relative to this component",
          "type": "array",
          "items": {"$ref": "#/definitions/Connector"}
        },
        "offset": {
          "xml": {
            "name": "offset",
            "attribute": false,
            "wrapped": false
          },
          "description": "The offset of the component relative to the parent component",
          "$ref": "#/definitions/Point"
        },
        "type": {
          "xml": {
            "name": "type",
            "attribute": false,
            "wrapped": false
          },
          "description": "The discriminator type for serialization of the different components",
          "type": "string"
        }
      },
      "discriminator": "type"
    },
    "HyperlinkComponent": {
      "allOf": [
        {"$ref": "#/definitions/StampComponent"},
        {
          "description": "An hyperlink component to stamp a hyperlink on a pdf",
          "type": "object",
          "title": "HyperlinkComponent",
          "required": [
            "address",
            "height",
            "type",
            "width"
          ],
          "properties": {
            "address": {
              "description": "The hyperlink address",
              "type": "string"
            },
            "width": {
              "format": "int32",
              "description": "The preferred width in pixels",
              "type": "integer"
            },
            "height": {
              "format": "int32",
              "description": "The preferred height in pixels",
              "type": "integer"
            }
          }
        }
      ],
      "description": "An hyperlink component to stamp a hyperlink on a pdf",
      "title": "HyperlinkComponent"
    },
    "PdfStamperConfigContainer": {
      "description": "Container with the PDF stamper configuration",
      "type": "object",
      "title": "PdfStamperConfigContainer",
      "properties": {
        "registeredResources": {
          "type": "array",
          "items": {"$ref": "#/definitions/StreamLocation"}
        },
        "creationTime": {
          "format": "date-time",
          "description": "The creation date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "configId": {"type": "string"},
        "updateTime": {
          "format": "date-time",
          "description": "The last update date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "configStatus": {
          "description": "The status of the configStatus action",
          "readOnly": true,
          "type": "string",
          "enum": [
            "CREATED",
            "UPDATED",
            "RESOURCE_UPLOADED",
            "ERROR",
            "DELETED",
            "DONE"
          ]
        },
        "pdfStamperConfig": {
          "description": "The PDF stamper configuration",
          "$ref": "#/definitions/PdfStamperConfig"
        },
        "statusMessage": {
          "description": "A status message, which can be informational, warning or error. A message here does not indicate an error per se",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "LineComponent": {
      "allOf": [
        {"$ref": "#/definitions/StampComponent"},
        {
          "description": "A line component to stamp a line on a pdf",
          "type": "object",
          "title": "LineComponent",
          "required": [
            "lineTo",
            "type"
          ],
          "properties": {
            "color": {
              "description": "The color of the line",
              "$ref": "#/definitions/Color"
            },
            "lineTo": {
              "description": "The point to which the line should be drawn",
              "$ref": "#/definitions/Point"
            },
            "lineWidth": {
              "format": "float",
              "description": "The thickness of the line",
              "type": "number"
            }
          }
        }
      ],
      "description": "A line component to stamp a line on a pdf",
      "title": "LineComponent"
    },
    "StreamLocation": {
      "description": "Location record of data stream",
      "type": "object",
      "title": "StreamLocation",
      "properties": {
        "folderPath": {"type": "string"},
        "filename": {"type": "string"},
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "containerId": {"type": "string"},
        "originalFilename": {"type": "string"}
      }
    },
    "ImageComponent": {
      "allOf": [
        {"$ref": "#/definitions/StampComponent"},
        {
          "description": "An image component to stamp an image on a pdf",
          "type": "object",
          "title": "ImageComponent",
          "required": ["type"],
          "properties": {
            "imageData": {
              "description": "The image as a base64 string",
              "type": "string"
            },
            "scaledDimension": {
              "description": "The preferred dimension of the image",
              "$ref": "#/definitions/Dimension"
            },
            "imageStreamLocation": {
              "description": "The stream location of the image. This is used if image data hasn't been set",
              "$ref": "#/definitions/StreamLocation"
            }
          }
        }
      ],
      "description": "An image component to stamp an image on a pdf",
      "title": "ImageComponent"
    },
    "InputResources": {
      "description": "Input response",
      "type": "object",
      "title": "InputResources",
      "properties": {"streamLocations": {
        "description": "Input Stream Locations",
        "type": "array",
        "items": {"$ref": "#/definitions/StreamLocation"}
      }}
    },
    "PdfStamperJobSettings": {
      "description": "PDF stamper job settings",
      "type": "object",
      "title": "PdfStamperJobSettings",
      "properties": {
        "useConfiguration": {
          "description": "A list of configuration ids that have to be applied during executing the job.",
          "type": "array",
          "items": {"type": "string"}
        },
        "variables": {
          "description": "A map with key-values used to replace template variables in components.",
          "additionalProperties": {"type": "string"},
          "type": "object"
        },
        "resultSettings": {
          "description": "The result file and lifecycle settings",
          "$ref": "#/definitions/ResultSettings"
        },
        "configuration": {
          "description": "A configuration that only applies for one job without the ability to be reused.",
          "$ref": "#/definitions/PdfStamperConfig"
        },
        "inputSettings": {
          "description": "The input file and lifecycle settings",
          "$ref": "#/definitions/InputSettings"
        },
        "jobLifecycle": {
          "description": "The lifecycle of the job itself",
          "$ref": "#/definitions/Lifecycle"
        }
      }
    },
    "StorageLocation": {
      "description": "Storage Location",
      "type": "object",
      "title": "StorageLocation",
      "properties": {
        "folderPath": {"type": "string"},
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "containerId": {"type": "string"}
      }
    },
    "InputSettings": {
      "description": "Input settings. Specify, if applicable, external location of the inputfile(s)",
      "type": "object",
      "title": "InputSettings",
      "properties": {
        "lifecycle": {
          "description": "The lifecycle of input files",
          "$ref": "#/definitions/Lifecycle"
        },
        "storageLocation": {
          "description": "Input Storage location. This where input files will be stored when addInput is called",
          "$ref": "#/definitions/StorageLocation"
        }
      }
    },
    "PdfStamperJobContainer": {
      "description": "The PDF Stamper job.",
      "type": "object",
      "title": "PdfStamperJobContainer",
      "properties": {
        "result": {
          "description": "The result(s)",
          "readOnly": true,
          "$ref": "#/definitions/ResultResources"
        },
        "completionTime": {
          "format": "date-time",
          "description": "The completion date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "input": {
          "description": "The input(s)",
          "readOnly": true,
          "$ref": "#/definitions/InputResources"
        },
        "jobId": {
          "description": "The job id",
          "readOnly": true,
          "type": "string"
        },
        "settings": {
          "description": "The settings used during executing the PDF Stamper job",
          "$ref": "#/definitions/PdfStamperJobSettings"
        },
        "jobStatus": {
          "description": "The status of the job",
          "readOnly": true,
          "type": "string",
          "enum": [
            "CREATED",
            "INPUTS_UPLOADED",
            "PROCESSING",
            "DONE",
            "ERROR",
            "DELETED"
          ]
        },
        "creationTime": {
          "format": "date-time",
          "description": "The creation date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "The last update date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "A status message, which can be informational, warning or error. AA message here does not indicate an error perse",
          "readOnly": true,
          "type": "string"
        },
        "queueTime": {
          "format": "date-time",
          "description": "The PDF Stamper queue date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TextComponent": {
      "allOf": [
        {"$ref": "#/definitions/StampComponent"},
        {
          "description": "An text component to stamp text on a pdf",
          "type": "object",
          "title": "TextComponent",
          "required": [
            "text",
            "type"
          ],
          "properties": {
            "nonStrokingColor": {
              "description": "The color of the text",
              "$ref": "#/definitions/Color"
            },
            "fontName": {
              "description": "The font of the text",
              "type": "string"
            },
            "fontSize": {
              "format": "float",
              "description": "The size of the text",
              "type": "number"
            },
            "text": {
              "description": "The text that will be displayed",
              "type": "string"
            }
          }
        }
      ],
      "description": "An text component to stamp text on a pdf",
      "title": "TextComponent"
    },
    "PdfStamperConfig": {
      "description": "The PDF stamper configuration",
      "type": "object",
      "title": "PdfStamperConfig",
      "properties": {
        "storageLocation": {
          "description": "The storage location where the configuration resources will be stored",
          "$ref": "#/definitions/StorageLocation"
        },
        "fields": {
          "description": "The form fields that should be filled",
          "additionalProperties": {"type": "string"},
          "type": "object"
        },
        "canvasComponents": {
          "description": "The canvas components containing the information of the stamp",
          "type": "array",
          "items": {"$ref": "#/definitions/CanvasComponent"}
        }
      }
    },
    "Color": {
      "description": "A color object",
      "type": "object",
      "title": "Color",
      "properties": {
        "name": {
          "description": "Use one of the common predefined colors",
          "type": "string",
          "enum": [
            "BLACK",
            "WHITE",
            "RED",
            "GREEN",
            "BLUE",
            "YELLOW",
            "CYAN",
            "MAGENTA",
            "PINK",
            "GRAY",
            "DARK_GRAY",
            "LIGHT_GRAY",
            "ORANGE"
          ]
        },
        "rgbValue": {
          "description": "Use a color that is composed out of the red, green and blue values",
          "$ref": "#/definitions/RGBValue"
        }
      }
    },
    "Lifecycle": {
      "description": "Lifecycle settings. When no lifecycle settings are supplied, the job and files will be deleted directly after retrieval of the file",
      "type": "object",
      "title": "Lifecycle",
      "properties": {
        "applicableJobStatusses": {
          "description": "Job status needs to be in this list in order for the action to be performed!",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CREATED",
              "INPUTS_UPLOADED",
              "PROCESSING",
              "DONE",
              "ERROR",
              "DELETED"
            ]
          }
        },
        "actionTime": {
          "format": "date-time",
          "description": "The time at which the job and files will be deleted, regardless of whether it has been retrieved or not. Maximal time is 1 day from job creation",
          "type": "string"
        },
        "action": {
          "description": "The action to perform. Currently only delete is supported",
          "type": "string",
          "enum": [
            "DELETE",
            "NONE"
          ]
        },
        "type": {
          "description": "Determine when to delete the job and associated files.\r\nRETRIEVAL means delete directly after retrieving the PDF file. When the file has not been retrieved before the action time, it will be deleted regardless.\r\nTime means, delete on specific time, regardless of whether it has been processed",
          "type": "string",
          "enum": ["RETRIEVAL"]
        }
      }
    },
    "CanvasComponent": {
      "description": "A canvas space interconnecting zones on the page to stamp components",
      "type": "object",
      "title": "CanvasComponent",
      "required": [
        "pageOperation",
        "pageSelector",
        "type"
      ],
      "properties": {
        "border": {
          "description": "The border of the component",
          "$ref": "#/definitions/Border"
        },
        "specificPages": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "connectors": {
          "description": "Connectors containing components that can be positioned relative to this component",
          "type": "array",
          "items": {"$ref": "#/definitions/Connector"}
        },
        "pageSelector": {
          "description": "Prescribes the page the component needs to be overlay-ed",
          "type": "string",
          "enum": [
            "FIRST_PAGE",
            "LAST_PAGE",
            "EVEN_PAGES",
            "ODD_PAGES",
            "ALL_PAGES",
            "SPECIFIC_PAGES"
          ]
        },
        "offset": {
          "description": "The offset of the component relative to the parent component",
          "$ref": "#/definitions/Point"
        },
        "pageOperation": {
          "description": "The operation that should be executed with the stamp component",
          "type": "string",
          "enum": ["STAMP"]
        },
        "type": {
          "description": "The discriminator type for serialization of the different components",
          "type": "string"
        }
      }
    },
    "Error": {
      "description": "An error",
      "type": "object",
      "title": "Error",
      "required": [
        "code",
        "level",
        "message"
      ],
      "properties": {
        "code": {"type": "string"},
        "level": {
          "type": "string",
          "enum": [
            "INFO",
            "WARNING",
            "FATAL"
          ]
        },
        "cause": {"$ref": "#/definitions/Error"},
        "message": {"type": "string"}
      }
    },
    "ResultSettings": {
      "description": "Result settings",
      "type": "object",
      "title": "ResultSettings",
      "properties": {
        "lifecycle": {
          "description": "The lifecycle of result files",
          "$ref": "#/definitions/Lifecycle"
        },
        "storageLocation": {
          "description": "Result Storage location",
          "$ref": "#/definitions/StorageLocation"
        }
      }
    },
    "Dimension": {
      "description": "Dimension",
      "type": "object",
      "title": "Dimension",
      "required": [
        "height",
        "width"
      ],
      "properties": {
        "unit": {
          "type": "string",
          "enum": ["pt"]
        },
        "width": {
          "format": "float",
          "type": "number"
        },
        "height": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "Point": {
      "description": "Location point",
      "type": "object",
      "title": "Point",
      "required": [
        "x",
        "y"
      ],
      "properties": {
        "unit": {
          "type": "string",
          "enum": ["pt"]
        },
        "x": {
          "format": "float",
          "type": "number"
        },
        "y": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "ErrorResponse": {
      "description": "The error response",
      "type": "object",
      "title": "ErrorResponse",
      "properties": {"errors": {
        "type": "array",
        "items": {"$ref": "#/definitions/Error"}
      }}
    },
    "BarcodeComponent": {
      "allOf": [
        {"$ref": "#/definitions/StampComponent"},
        {
          "description": "An barcode component to stamp a barcode on a pdf",
          "type": "object",
          "title": "BarcodeComponent",
          "required": [
            "barcodeFormat",
            "content",
            "height",
            "type",
            "width"
          ],
          "properties": {
            "errorCorrectionLevel": {
              "description": "Specifies what degree of error correction to use, for example in QR Codes, See ISO 18004:2006, 6.5.1. This enum encapsulates the four error correction levels defined by the QR code standard",
              "type": "string",
              "enum": [
                "QR_L",
                "QR_M",
                "QR_Q",
                "QR_H"
              ]
            },
            "barcodeFormat": {
              "description": "The barcode format to generate",
              "type": "string",
              "enum": [
                "AZTEC",
                "CODABAR",
                "CODE_39",
                "CODE_93",
                "CODE_128",
                "DATA_MATRIX",
                "EAN_8",
                "EAN_13",
                "ITF",
                "MAXICODE",
                "PDF_417",
                "QR_CODE",
                "RSS_14",
                "RSS_EXPANDED",
                "UPC_A",
                "UPC_E",
                "UPC_EAN_EXTENSION"
              ]
            },
            "width": {
              "format": "int32",
              "description": "The preferred width in pixels",
              "type": "integer"
            },
            "content": {
              "description": "The contents to encode in the barcode",
              "type": "string"
            },
            "height": {
              "format": "int32",
              "description": "The preferred height in pixels",
              "type": "integer"
            },
            "qrVersion": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      ],
      "description": "An barcode component to stamp a barcode on a pdf",
      "title": "BarcodeComponent"
    },
    "Border": {
      "description": "Border of component",
      "type": "object",
      "title": "Border",
      "required": ["color"],
      "properties": {
        "color": {
          "description": "The color of the border",
          "$ref": "#/definitions/Color"
        },
        "thickness": {
          "format": "float",
          "description": "The thickness of the border line",
          "type": "number"
        }
      }
    },
    "ResultResources": {
      "description": "Result response",
      "type": "object",
      "title": "ResultResources",
      "properties": {"streamLocations": {
        "description": "Result Stream Locations",
        "type": "array",
        "items": {"$ref": "#/definitions/StreamLocation"}
      }}
    },
    "FileContentRequest": {
      "xml": {
        "name": "FileContentRequest",
        "attribute": false,
        "wrapped": false
      },
      "description": "Filecontent request",
      "type": "object",
      "title": "FileContentRequest",
      "required": [
        "content",
        "contentType",
        "fileName"
      ],
      "properties": {
        "fileName": {
          "description": "Original filename",
          "type": "string"
        },
        "contentType": {
          "description": "Content type",
          "type": "string"
        },
        "content": {
          "description": "The file as a base64 encoded string",
          "type": "string"
        }
      }
    }
  },
  "swagger": "2.0",
  "info": {
    "license": {
      "name": "Apache License Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "Sphereon DevOps Team",
      "url": "https://sphereon.com",
      "email": "dev@sphereon.com"
    },
    "description": "The PDF Stamper API enables the possibility to add both static and dynamic stamps on existing PDFs. The stamps can consist of one or more barcode, hyperlink, image, line or text elements.\r\n\r\nThe flow is generally as follows:\r\n1. Make a configuration containing the stamp information\r\n2. Create a job specifying the desired configuration\r\n3. Add one or more PDF files to the job\r\n4. Start the job for processing\r\n5. Retrieve the processed files\r\n\r\nFull API Documentation: https://docs.sphereon.com/api/pdf/stamp/0.2/html\r\nInteractive testing: A web based test console is available in the Sphereon API Store at https://store.sphereon.com",
    "termsOfService": "https://docs.sphereon.com/api/pdf/stamp/0.2/html",
    "title": "PDF stamper",
    "version": "0.2"
  },
  "tags": [
    {
      "name": "Config",
      "description": "API for PDF stamper configuration"
    },
    {
      "name": "Jobs",
      "description": "PDF stamper job related API's"
    }
  ]
}