/*
 * PDF stamper
 * The PDF Stamper API enables the possibility to add both static and dynamic stamps on existing PDFs. The stamps can consist of one or more barcode, hyperlink, image, line or text elements. The API also supports digital signatures (blue bar), blockchain registrations and filling out forms    The flow is generally as follows:  1. Make a configuration containing the stamp information  2. Create a job specifying the desired configuration  3. Add one or more PDF files to the job  4. Start the job for processing  5. Retrieve the processed files    Full API Documentation: https://docs.sphereon.com/api/pdf-stamper/1.0  Interactive testing: A web based test console is available in the Sphereon API Store at https://store.sphereon.com
 *
 * OpenAPI spec version: 1.0
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sphereon.sdk.pdf.stamper.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ClaimParameters
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-08T13:37:39.498+02:00")
public class ClaimParameters {
  @SerializedName("apiEndUser")
  private String apiEndUser = null;

  @SerializedName("applicationId")
  private String applicationId = null;

  @SerializedName("keyType")
  private String keyType = null;

  @SerializedName("sphereonIdentifier")
  private String sphereonIdentifier = null;

  @SerializedName("apiSupplierTenantId")
  private String apiSupplierTenantId = null;

  public ClaimParameters apiEndUser(String apiEndUser) {
    this.apiEndUser = apiEndUser;
    return this;
  }

   /**
   * Get apiEndUser
   * @return apiEndUser
  **/
  @ApiModelProperty(value = "")
  public String getApiEndUser() {
    return apiEndUser;
  }

  public void setApiEndUser(String apiEndUser) {
    this.apiEndUser = apiEndUser;
  }

  public ClaimParameters applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * Get applicationId
   * @return applicationId
  **/
  @ApiModelProperty(value = "")
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }

  public ClaimParameters keyType(String keyType) {
    this.keyType = keyType;
    return this;
  }

   /**
   * Get keyType
   * @return keyType
  **/
  @ApiModelProperty(value = "")
  public String getKeyType() {
    return keyType;
  }

  public void setKeyType(String keyType) {
    this.keyType = keyType;
  }

  public ClaimParameters sphereonIdentifier(String sphereonIdentifier) {
    this.sphereonIdentifier = sphereonIdentifier;
    return this;
  }

   /**
   * Get sphereonIdentifier
   * @return sphereonIdentifier
  **/
  @ApiModelProperty(value = "")
  public String getSphereonIdentifier() {
    return sphereonIdentifier;
  }

  public void setSphereonIdentifier(String sphereonIdentifier) {
    this.sphereonIdentifier = sphereonIdentifier;
  }

  public ClaimParameters apiSupplierTenantId(String apiSupplierTenantId) {
    this.apiSupplierTenantId = apiSupplierTenantId;
    return this;
  }

   /**
   * Get apiSupplierTenantId
   * @return apiSupplierTenantId
  **/
  @ApiModelProperty(value = "")
  public String getApiSupplierTenantId() {
    return apiSupplierTenantId;
  }

  public void setApiSupplierTenantId(String apiSupplierTenantId) {
    this.apiSupplierTenantId = apiSupplierTenantId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClaimParameters claimParameters = (ClaimParameters) o;
    return Objects.equals(this.apiEndUser, claimParameters.apiEndUser) &&
        Objects.equals(this.applicationId, claimParameters.applicationId) &&
        Objects.equals(this.keyType, claimParameters.keyType) &&
        Objects.equals(this.sphereonIdentifier, claimParameters.sphereonIdentifier) &&
        Objects.equals(this.apiSupplierTenantId, claimParameters.apiSupplierTenantId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiEndUser, applicationId, keyType, sphereonIdentifier, apiSupplierTenantId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClaimParameters {\n");
    
    sb.append("    apiEndUser: ").append(toIndentedString(apiEndUser)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    keyType: ").append(toIndentedString(keyType)).append("\n");
    sb.append("    sphereonIdentifier: ").append(toIndentedString(sphereonIdentifier)).append("\n");
    sb.append("    apiSupplierTenantId: ").append(toIndentedString(apiSupplierTenantId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

